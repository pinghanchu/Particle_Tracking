
OpenPTV Python (PyPTV)
======================
This is a PTV application using Python and liboptv, the core library of the 
OpenPTV project. This files gives instructions on building and getting it to
run.

Dependencies
------------
Before building PyPTV itself, the dependencies have to be in place. These
are listed here.

1. PyPTV requires Python with a certain set of scientific and UI modules
installed in order to run. 

On Linux, Python is probably already installed, and the other packages can 
be found in the package manager. The required packages are NumPy, SciPy, 
TraitsUI, Cython.

On Windows, everything needed is on the Python(x,y) distribution, which can
be downloaded here:
http://code.google.com/p/pythonxy/

When installing, make sure that the packages mentioned above are checked.

2. The core OpenPTV library (liboptv) must be installed. This should be done
using MSYS and CMake - the process is fully described in the liboptv README,
so that it will not be repeated here.

3. Although this should be handled by the liboptv build process, it should be 
noted that a C compiler and build environment must be present. On Linux/Mac
gcc is assumed here, and on Windows MingW32, as described in the liboptv
README.


Building
--------
The build is performed in the pyptv_gui subdirectory. On Linux/Mac, use
this command set:

    $ python setup.py build_ext
    $ python setup.py install

On Windows, using an MSYS shell as described in the liboptv README, use

    $ python setup.py build_ext -I <path to liboptv includes> \
      -L <path to the liboptv library>

These paths depend on where you installed liboptv, but if you installed 
using default directory names for MinGW/MSYS and according to the liboptv
instructions, these would be 
-I /c/MinGW/msys/1.0/include
-L /c/MinGW/msys/1.0/lib

Then install in the same way as on other systems:

    $ python setup.py install


Running
-------
Launch OpenPTV either without a data directory, like so:

    $ python pyptv_gui/pyptv_gui.py

or with a 3D-PTV compatible data directory, like so:

    $ python pyptv_gui/pyptv_gui.py /c/data/test_data

In the first case, the program will first prompt for a directory path before 
continuing to the UI.

